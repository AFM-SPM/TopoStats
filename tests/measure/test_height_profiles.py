"""Tests for height profiles."""

import sys

import numpy as np
import numpy.typing as npt
import pytest
from loguru import logger

from topostats.measure import height_profiles

# pylint: disable=too-many-lines


@pytest.mark.parametrize(
    ("img", "skeleton", "interpolate_conf", "target"),
    [
        pytest.param(
            np.asarray(
                [
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
                    [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
                    [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0],
                    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                    [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0],
                    [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
                    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                ]
            ),
            np.asarray(
                [
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
                    [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
                    [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0],
                    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                    [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0],
                    [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
                    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                ]
            ),
            {"method": "linear"},
            np.asarray([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),
            id="Basic circle, interpolation : linear",
        ),
        pytest.param(
            np.asarray(
                [
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                ]
            ),
            np.asarray(
                [
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                ]
            ),
            {"method": "linear"},
            np.asarray([6, 7, 8, 9, 10, 9, 8, 7, 6]),
            id="Diagonal line, interpolation : linear",
        ),
        pytest.param(
            np.asarray(
                [
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                ]
            ),
            np.asarray(
                [
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                ]
            ),
            {"method": "cubic"},
            np.asarray(
                [
                    6.00003876621563,
                    7.000004717194621,
                    7.9999928244616285,
                    8.99999298402839,
                    9.999970980789172,
                    8.999992984028388,
                    7.999992824461623,
                    7.000004717194617,
                    6.0000387662156305,
                ]
            ),
            id="Diagonal line, interpolation : cubic",
        ),
    ],
)
def test_interpolate_height_profile_basic(
    img: npt.NDArray, skeleton: npt.NDArray, interpolate_conf: dict, target: npt.NDArray
) -> None:
    """Test interpolate_height_profile() with basic shapes and heights."""
    np.testing.assert_array_almost_equal(
        height_profiles.interpolate_height_profile(img, skeleton, **interpolate_conf), target, decimal=12
    )


@pytest.mark.skipif(sys.platform.startswith("win"), reason="Different results interpolating on Windows, unclear why.")
@pytest.mark.parametrize(
    ("img", "interpolate_conf", "target"),
    [
        pytest.param(
            "skeleton_loop1",
            {"method": "linear"},
            np.asarray(
                [
                    4.30791827,
                    4.86371684,
                    5.28500948,
                    5.53473485,
                    5.55819507,
                    5.39233959,
                    5.07193821,
                    4.621086,
                    4.09936482,
                    3.54827381,
                    2.99507989,
                    2.50488228,
                    2.06631856,
                    1.68721739,
                    1.40203971,
                    1.18984078,
                    1.03495964,
                    0.94426116,
                    0.91158081,
                    0.91025234,
                    0.93715801,
                    1.00475989,
                    1.09010396,
                    1.19523237,
                    1.33848387,
                    1.51579731,
                    1.72951891,
                    1.99324006,
                    2.31083479,
                    2.66840901,
                    3.05827694,
                    3.47813575,
                    3.89918151,
                    4.31125568,
                    4.7225136,
                    5.13337948,
                    5.55906209,
                    6.01946905,
                    6.51836227,
                    7.05370887,
                    7.60185382,
                    8.09494731,
                    8.51241952,
                    8.81118395,
                    8.93446284,
                    8.90844269,
                    8.75283145,
                    8.49569552,
                    8.19083038,
                    7.87932443,
                    7.59351156,
                    7.35874881,
                    7.17612192,
                    7.04691279,
                    6.96320513,
                    6.91267153,
                    6.88871863,
                    6.88039019,
                    6.87975043,
                    6.88714234,
                    6.89920247,
                    6.90953545,
                    6.92225377,
                    6.93514034,
                    6.93958951,
                    6.93252822,
                    6.90456431,
                    6.84272031,
                    6.73734744,
                    6.57593918,
                    6.35116799,
                    6.07711553,
                    5.74590502,
                    5.36392377,
                    4.98437057,
                    4.59229473,
                    4.19810529,
                    3.84071438,
                    3.51839129,
                    3.21935734,
                    2.96342772,
                    2.7698832,
                    2.62176059,
                    2.53683642,
                    2.55645943,
                    2.67925044,
                    2.93054531,
                    3.34754132,
                    3.94006517,
                    4.69975608,
                    5.61321188,
                    6.64468917,
                    7.70484693,
                    8.70867816,
                    9.57588036,
                    10.20177265,
                    10.53347226,
                    10.53686996,
                    10.21190014,
                    9.61313489,
                    8.7910351,
                    7.7889072,
                    6.7130585,
                    5.62735358,
                ]
            ),
            id="Skeleton loop 1",
        ),
        pytest.param(
            "skeleton_loop2",
            {"method": "linear"},
            np.asarray(
                [
                    4.0619156,
                    4.59769976,
                    5.07194881,
                    5.4598722,
                    5.74266307,
                    5.90897309,
                    5.95548859,
                    5.88671391,
                    5.71416902,
                    5.45522533,
                    5.13175692,
                    4.76871217,
                    4.3926688,
                    4.03033293,
                    3.70705677,
                    3.44538272,
                    3.26368646,
                    3.17500905,
                    3.18617996,
                    3.29733225,
                    3.50189565,
                    3.78703014,
                    4.13504646,
                    4.52451152,
                    4.93238867,
                    5.33607681,
                    5.71542665,
                    6.05440992,
                    6.34221761,
                    6.57369495,
                    6.74906814,
                    6.87305091,
                    6.95350819,
                    6.99990172,
                    7.02174127,
                    7.02722477,
                    7.02218874,
                    7.00943016,
                    6.98839836,
                    6.95536656,
                    6.90374627,
                    6.82500123,
                    6.70967613,
                    6.54866661,
                    6.33454585,
                    6.06277592,
                    5.73262499,
                    5.34763761,
                    4.91557235,
                    4.44780806,
                    3.95831087,
                    3.46232522,
                    2.97498837,
                    2.51005445,
                    2.07893072,
                    1.69048177,
                    1.35002338,
                    1.05920113,
                    0.81750624,
                    0.6225494,
                    0.47079393,
                    0.35828689,
                    0.28132135,
                    0.2369759,
                    0.22354465,
                    0.24076292,
                    0.28988347,
                    0.37359138,
                    0.49569956,
                    0.66068551,
                    0.87305324,
                    1.13656102,
                    1.45337743,
                    1.82325718,
                    2.24285268,
                    2.70528721,
                    3.20010457,
                    3.71367167,
                    4.23004786,
                    4.73225381,
                    5.20379186,
                    5.63020557,
                    6.00043949,
                    6.30778133,
                    6.55023808,
                    6.73031704,
                    6.85423088,
                    6.93075921,
                    6.96996227,
                    6.98195788,
                    6.97575135,
                    6.95902345,
                    6.93752017,
                    6.91515244,
                    6.89416481,
                    6.87533135,
                    6.85806332,
                    6.84036066,
                    6.81860637,
                    6.78727833,
                    6.73872222,
                    6.66317333,
                    6.54921286,
                    6.38477988,
                    6.15873183,
                    5.8627773,
                    5.49343892,
                    5.05360169,
                    4.55320277,
                    4.00881858,
                ]
            ),
            id="Skeleton loop 2",
        ),
        pytest.param(
            "skeleton_linear3",
            {"method": "linear"},
            np.asarray(
                [
                    4.24849855,
                    4.70671133,
                    4.95383149,
                    4.9544781,
                    4.70461955,
                    4.23343899,
                    3.62090963,
                    2.94619782,
                    2.27591175,
                    1.66588205,
                    1.17274271,
                    0.79139007,
                    0.51291217,
                    0.32517228,
                    0.21431997,
                    0.16764426,
                    0.16269881,
                    0.19112125,
                    0.24606317,
                    0.331397,
                    0.44229326,
                    0.56773384,
                    0.70062157,
                    0.83617725,
                    0.98948858,
                    1.14316289,
                    1.30777674,
                    1.50602196,
                    1.78511379,
                    2.19660045,
                    2.77557163,
                    3.56096571,
                    4.56975658,
                    5.79275351,
                    7.13048113,
                    8.46369258,
                    9.65316843,
                    10.55164771,
                    11.03242931,
                    11.0819936,
                    10.73252577,
                    10.06862654,
                    9.21075226,
                    8.29602466,
                    7.41833077,
                    6.63511272,
                    5.97203231,
                    5.44062297,
                    4.98916101,
                    4.58780287,
                    4.21020307,
                    3.84299373,
                    3.47294638,
                    3.0930764,
                    2.71128301,
                    2.33823545,
                    1.98992747,
                    1.67310489,
                    1.39932339,
                    1.17851784,
                    1.01865459,
                    0.92713857,
                    0.9062224,
                    0.9600005,
                    1.09339863,
                    1.31696922,
                    1.64160691,
                    2.07899655,
                    2.63956873,
                    3.32660908,
                    4.13083248,
                    5.01225171,
                    5.91763039,
                    6.78013905,
                    7.53115745,
                    8.11349274,
                    8.49705832,
                    8.6849932,
                    8.71172258,
                    8.62050032,
                    8.4673675,
                    8.29861773,
                    8.14278144,
                    7.99214749,
                    7.81577597,
                    7.62858543,
                    7.42945223,
                    7.22541644,
                    7.00166283,
                    6.81493048,
                    6.69819981,
                    6.6631371,
                    6.70362554,
                    6.78904668,
                    6.90105498,
                    6.99283331,
                    7.01603741,
                    6.9067827,
                    6.63151024,
                    6.19143372,
                    5.59809271,
                    4.88285607,
                ]
            ),
            id="Linear skeleton 3, row 81",
        ),
    ],
)
def test_interpolate_height_profile_images(img: dict, interpolate_conf: dict, target: npt.NDArray, request) -> None:
    """Test interpolate_height_profile() with more realistic images."""
    _img = request.getfixturevalue(img)
    interpolated_heights = height_profiles.interpolate_height_profile(_img["img"], _img["skeleton"], **interpolate_conf)
    logger.debug(interpolated_heights)
    np.testing.assert_array_almost_equal(interpolated_heights, target, decimal=8)
